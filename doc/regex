#coding:utf-8
from flask import *
from werkzeug.routing import BaseConverter
from flask.ext.script import Manager

class RegexConverter(BaseConverter):
    def __init__(self,url_map,*items):
        super(RegexConverter,self).__init__(url_map)
        self.regex = items[0]

app =  Flask(__name__)
app.url_map.converters['regex'] = RegexConverter
manage = Manager(app)

@app.route('/')
def index1():
    # abort(404)
    response = make_response(render_template('index.html',tittle = 'welcome1'))
    response.set_cookie('username','')
    return response

@app.route('/index')
@app.route('/nanann/')
def index():
    return 'nn'

@app.route('/user/<regex("[a-z]{3}"):user_id>')
def user(user_id):
    return 'user id is %s ' %user_id
@app.route('/login/',methods=['GET','POST'])
def login():
    # 表单post提交
    if request.method=='POST':
        username = request.form['usename']
        psaaword = request.form['pssword']
    #网址get提交 localhost/5000/？username=nnn
    else:       #request.method=='GET':
        username = request.args['username']
    return render_template('login.html',method = request.method)

@app.errorhandler(404)
def page_not_found(error):
    return render_template('404.html'),404

@manage.command
def dev():
    from livereload import Server
    live_server = Server(app.wsgi_app)
    live_server.watch('**/*.*')
    live_server.serve(open_url=True)


if __name__ == '__main__':
    manage.run()
    # app.run(debug=True)

# from flask import Flask
# from werkzeug.routing import BaseConverter
# class RegexConverter(BaseConverter):
#     def __init__(self, map, *args):
#         # super(RegexConverter,self).__init__(map)
#         self.map = map
#         self.regex = args[0]
#
# app = Flask(__name__)
# app.url_map.converters['regex'] = RegexConverter

# @app.route('/view/<regex("[a-zA-Z0-9]+"):uuid>/')
# def view(uuid):
#     """
#     url: /view/1010000000125259/
#     result: view uuid:1010000000125259
#     """
#     return "view uuid: %s" % (uuid)
#
# @app.route('/<regex(".*"):url>')
# def not_found(url):
#     """
#     url: /hello
#     result: not found: 'hello'
#     """
#     return "not foundnn: '%s'" % (url)


# if __name__ == '__main__':
#     app.run(debug=True)